// <auto-generated />
using Assignment_3.models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment_3.Migrations
{
    [DbContext(typeof(MovieCharactersDbContext))]
    partial class MovieCharactersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment_3.models.Domain.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Iron Man",
                            Gender = "Male",
                            Name = "Tony Stark",
                            Picture = "https://www.imdb.com/title/tt0371746/mediaviewer/rm286559232/?ref_=tt_md_4"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "War Machine",
                            Gender = "Male",
                            Name = "James Rhodey",
                            Picture = "https://www.imdb.com/title/tt1228705/mediaviewer/rm3414265088/?ref_=tt_md_4"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "",
                            Gender = "Female",
                            Name = "Pepper Potts",
                            Picture = "https://m.media-amazon.com/images/M/MV5BOGI2NTMxNTEtMjcxMS00NTk1LTgwZDYtZGNjOGNlMjRiNmVlXkEyXkFqcGdeQXVyMzkyOTg1MzE@._V1_SY200_CR79,0,200,200_AL_.jpg"
                        });
                });

            modelBuilder.Entity("Assignment_3.models.Domain.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = " The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe centered on a series of superhero films produced by Marvel Studios. The films are based on characters that appear in American comic books published by Marvel Comics. The franchise also includes television series, short films, digital series, and literature. The shared universe, much like the original Marvel Universe in comic books, was established by crossing over common plot elements, settings, cast, and characters.",
                            Name = "Marvel Cinematic Universe"
                        });
                });

            modelBuilder.Entity("Assignment_3.models.Domain.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Jon Favreau",
                            FranchiseId = 1,
                            Genre = " Action, Adventure, Sci fi",
                            Picture = "https://www.imdb.com/title/tt0371746/mediaviewer/rm1544850432/?ref_=tt_ov_i",
                            ReleaseYear = "2008",
                            Title = "Iron Man",
                            Trailer = "https://www.imdb.com/video/vi447873305?playlistId=tt0371746&ref_=tt_pr_ov_vi"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Jon Favreau",
                            FranchiseId = 1,
                            Genre = " Action, Adventure, Sci fi",
                            Picture = "https://www.imdb.com/title/tt1228705/mediaviewer/rm1059163136/?ref_=tt_ov_i",
                            ReleaseYear = "2010",
                            Title = "Iron Man 2",
                            Trailer = "https://www.imdb.com/video/vi2256077849?playlistId=tt1228705&ref_=tt_pr_ov_vi"
                        },
                        new
                        {
                            Id = 3,
                            Director = "Shane Black",
                            FranchiseId = 1,
                            Genre = " Action, Adventure, Sci fi",
                            Picture = "https://www.imdb.com/title/tt1300854/mediaviewer/rm520987392/?ref_=tt_ov_i",
                            ReleaseYear = "2013",
                            Title = "Iron Man 3",
                            Trailer = "https://www.imdb.com/video/vi2830738969?playlistId=tt1300854&ref_=tt_pr_ov_vi"
                        });
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.HasKey("CharactersId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("CharacterMovie");

                    b.HasData(
                        new
                        {
                            CharactersId = 1,
                            MoviesId = 1
                        },
                        new
                        {
                            CharactersId = 2,
                            MoviesId = 1
                        },
                        new
                        {
                            CharactersId = 3,
                            MoviesId = 1
                        },
                        new
                        {
                            CharactersId = 1,
                            MoviesId = 2
                        },
                        new
                        {
                            CharactersId = 2,
                            MoviesId = 2
                        },
                        new
                        {
                            CharactersId = 3,
                            MoviesId = 2
                        },
                        new
                        {
                            CharactersId = 1,
                            MoviesId = 3
                        },
                        new
                        {
                            CharactersId = 2,
                            MoviesId = 3
                        },
                        new
                        {
                            CharactersId = 3,
                            MoviesId = 3
                        });
                });

            modelBuilder.Entity("Assignment_3.models.Domain.Movie", b =>
                {
                    b.HasOne("Assignment_3.models.Domain.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.HasOne("Assignment_3.models.Domain.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_3.models.Domain.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assignment_3.models.Domain.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
